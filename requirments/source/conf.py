# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
import os
import re
import subprocess
import datetime
import json
import requests
import m2r

# -- Project information -----------------------------------------------------

project = 'shattuckite-requirements'
copyright = '2019, CNLHC'
author = 'CNLHC'

# The short X.Y version
version = '0.0'
# The full version, including alpha/beta/rc tags
release = release = re.sub('^v', '', os.popen('git describe').read().strip())


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'



needs_sphinx = '1.8'


# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'sphinx.ext.mathjax',
    'sphinx.ext.githubpages',
    'sphinx.ext.graphviz',
    'sphinx.ext.autosectionlabel',
    'sphinxcontrib.plantuml',
    'sphinx.ext.autosectionlabel'

]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ['.rst']

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'zh_CN'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}



#version update record autorealized
SHADOC_INDEX = '002'
SHADOC_REGEX_PATTERN = re.compile(
    r"^commit(.*?)$\nAuthor:(.*?)$\nDate:(.*?)$\s+SHADOC-{0:s}\sDOC\sUPDATE\s+AUTHOR:(.*?)\s+CENSOR:(.*?)\s+NOTE:(.*?)$".format(SHADOC_INDEX), re.S | re.M)
SHADCommitList = []

with subprocess.Popen(['git', 'log', '--grep', 'SHADOC-{0:s} DOC UPDATE'.format(SHADOC_INDEX)], stdout=subprocess.PIPE) as proc:
    result = (re.findall(SHADOC_REGEX_PATTERN, proc.stdout.read().decode()))
    for i in result:  # type:str
        res = {}
        dateString  = re.sub('\+\d+', '', i[2]).rstrip().lstrip()
        res['Hash'] = i[0].lstrip()
        res['GithubAuthor'] = i[1].lstrip()
        print(dateString)
        res['Date'] = datetime.datetime.strptime(dateString, '%a %b %d %H:%M:%S %Y').strftime('%Y-%m-%d %H:%M')
        res['Author'] = i[3].lstrip()
        res['Censor'] = i[4].lstrip()
        res['Note'] = i[5].lstrip()
        with subprocess.Popen(['git', 'describe', res['Hash']], stdout=subprocess.PIPE) as proc2:
            res['Version'] = proc2.stdout.read().decode()
        SHADCommitList.append(res)

RevHistoryLatexCell = ''
for commit in SHADCommitList:
    RevHistoryLatexCell += '\n{0:s}&      {1:s}&       {2:s}&     {3:s}&  {4:s}    \\\ \hline\n'.format(
        commit['Version'],
        commit['Date'],
        commit['GithubAuthor'],
        commit['Censor'],
        commit['Note'])

#########
plantuml = 'java -jar /opt/plantuml.jar -charset UTF-8'
plantuml_output_format = 'svg_obj'
plantuml_latex_output_format = 'pdf'
graphviz_output_format = 'svg'





# -- Options for HTMLHelp output ---------------------------------------------
# Output file base name for HTML help builder.
htmlhelp_basename = 'shattuckite-requirementsdoc'


# -- Options for LaTeX output ------------------------------------------------
latex_engine = 'xelatex'


latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
    'papersize': 'a4paper',
    'fncychap': '',
    'extraclassoptions': 'openany,oneside',
    'maketitle': r'''\shattuckitemaketitle
\newpage
    ''',
    'releasename': "版本",
    'preamble': r'''\usepackage{ctex}
\newcommand{\shattuckitemaketitle}{%
\maketitle
\makeMetaPage
}
\makeatletter
\def\@maketitle{%
  \newpage
  \null
  \vskip 2em%
  \begin{center}%
  \let \footnote \thanks
    {\zihao{-0} Shattuckite-requirements \par}%
    \vskip 1.5em%
    {\zihao{-0} 需求文档 \par}
    \vskip 5.5em%
    {\large
      \lineskip .5em%
      \begin{tabular}[t]{c}%
        \zihao{4}\@author
      \end{tabular}\par}%
    \vskip 1em%
      {\heiti\zihao{4}\itshape\py@release \releaseinfo}\par
    %{\large \@date}%
  \end{center}%
  \par
  \vskip 1.5em}
\makeatother

\newcommand{\makeMetaPage}{
\newpage
\begin{table}[]
\caption {\heiti 版本变更历史} \label{tab:title} 
\centering
\begin{tabular}{|l|p{2cm}|p{4cm}|l|p{5cm}|}
\hline
版本 & 提交日期 & 主要编制人 & 审核人 & 版本说明 \\ \hline
'''+RevHistoryLatexCell+r'''
\end{tabular}
\end{table}
\clearpage
}'''
}
latex_documents = [
    (master_doc, 'shattuckite-requirements.tex', 'shattuckite-requirements Documentation',
     'CNLHC', 'manual'),
]

todo_include_todos = True
